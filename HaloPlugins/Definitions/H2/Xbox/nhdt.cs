using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using HaloPlugins.Objects;
using HaloPlugins.Objects.Data;
using HaloPlugins.Objects.Reference;

namespace HaloPlugins.Xbox
{
    public class nhdt : TagDefinition
    {
       public nhdt() : base("nhdt", "hud_interface", 40)
       {
           Fields.AddRange(new MetaNode[] {
           new TagReference("DO_NOT_USE", "nhdt"),
           new TagBlock("Bitmap Widgets", 100, 256, new MetaNode[] { 
               new StringId("Name"),
               new HaloPlugins.Objects.Data.Enum("Input 1", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 2", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 3", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 4", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new Flags("[Do Draw If] Unit Flags", new string[] { "Default", "Grenade_Type_Is_NONE", "Grenade_Type_Is_Frag", "Grenade_Type_Is_Plasma", "Unit_Is_Single_Wielding", "Unit_Is_Dual_Wielding", "Unit_Is_Unzoomed", "Unit_Is_Zoomed_(Level_1)", "Unit_Is_Zoomed_(Level_2)", "Grenades_Disabled", "Binoculars_Enabled", "Motion_Sensor_Enabled", "Sheild_Enabled", "Dervish" }, 16),
               new Flags("[Do Draw If] Extra Flags", new string[] { "AutoAim_-_Friendly", "AutoAim_-_Plasma", "AutoAim_-_Headshot", "AutoAim_-_Vulnerable", "AutoAim_-_Invincible" }, 8),
               new Flags("[Do Draw If] Weapon Flags", new string[] { "Primary_Weapon", "Secondary_Weapon", "Backpack_Weapon", "Age_Below_Cutoff", "Clip_Below_Cutoff", "Total_Below_Cutoff", "Overheated", "Out_Of_Ammo", "Lock_Target_Available", "Locking", "Locked" }, 16),
               new Flags("[Do Draw If] Game Engine State Flags", new string[] { "Campaign_Solo", "Campaign_Coop", "Free_For_All", "Team_Game", "User_Leading", "User_Not_Leading", "Timed_Game", "Untimed_Game", "Other_Score_Valid", "Other_Score_Invalid", "Player_Is_Arming_Bomb", "Player_Talking" }, 16),
               new Flags("[Don't Draw If] Unit Flags", new string[] { "Default", "Grenade_Type_Is_NONE", "Grenade_Type_Is_Frag", "Grenade_Type_Is_Plasma", "Unit_Is_Single_Wielding", "Unit_Is_Dual_Wielding", "Unit_Is_Unzoomed", "Unit_Is_Zoomed_(Level_1)", "Unit_Is_Zoomed_(Level_2)", "Grenades_Disabled", "Binoculars_Enabled", "Motion_Sensor_Enabled", "Sheild_Enabled", "Dervish" }, 16),
               new Flags("[Don't Draw If] Extra Flags", new string[] { "AutoAim_-_Friendly", "AutoAim_-_Plasma", "AutoAim_-_Headshot", "AutoAim_-_Vulnerable", "AutoAim_-_Invincible" }, 8),
               new Flags("[Don't Draw If] Weapon Flags", new string[] { "Primary_Weapon", "Secondary_Weapon", "Backpack_Weapon", "Age_Below_Cutoff", "Clip_Below_Cutoff", "Total_Below_Cutoff", "Overheated", "Out_Of_Ammo", "Lock_Target_Available", "Locking", "Locked" }, 16),
               new Flags("[Don't Draw If] Game Engine State Flags", new string[] { "Campaign_Solo", "Campaign_Coop", "Free_For_All", "Team_Game", "User_Leading", "User_Not_Leading", "Timed_Game", "Untimed_Game", "Other_Score_Valid", "Other_Score_Invalid", "Player_Is_Arming_Bomb", "Player_Talking" }, 16),
               new Value("Age Cutoff", typeof(short)),
               new Value("Clip Cutoff", typeof(short)),
               new Value("Total Cutoff", typeof(short)),
               new HaloPlugins.Objects.Data.Enum("Anchor", new string[] { "Health_And_Sheild", "Weapon_HUD", "Motion_Sensor", "Scoreboard", "Crosshair", "Lock-on_Target" }, 16),
               new Flags("Flags", new string[] { "Flip_Horizontally", "Flip_Vertically", "(Scope)_Mirror_Horizontally", "(Scope)_Mirror_Vertically", "(Scope)_Stretch" }, 16),
               new TagReference("Bitmap", "bitm"),
               new TagReference("Shader", "shad"),
               new Value("Fullscreen Sequence Index", typeof(byte)),
               new Value("Halfscreen Sequence Index", typeof(byte)),
               new Value("Quarterscreen Sequence Index", typeof(byte)),
               new Padding(1),
               new Value("Fullscreen Offset X", typeof(short)),
               new Value("Fullscreen Offset Y", typeof(short)),
               new Value("Halfscreen Offset X", typeof(short)),
               new Value("Halfscreen Offset Y", typeof(short)),
               new Value("Quarterscreen Offset X", typeof(short)),
               new Value("Quarterscreen Offset Y", typeof(short)),
               new Value("Fullscreen Registration Point X", typeof(float)),
               new Value("Fullscreen Registration Point Y", typeof(float)),
               new Value("Halfscreen Registration Point X", typeof(float)),
               new Value("Halfscreen Registration Point Y", typeof(float)),
               new Value("Quarterscreen Registration Point X", typeof(float)),
               new Value("Quarterscreen Registration Point Y", typeof(float)),
               new TagBlock("Effect", 104, 1, new MetaNode[] { 
                   new Flags("Flags", new string[] { "Apply_Scale", "Apply_Theta", "Apply_Offset" }, 32),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
               }),
               new HaloPlugins.Objects.Data.Enum("Special HUD Type", new string[] { "Unspecial", "S.B._Player_Emblem", "S.B._Other_Player_Emblem", "S.B._Player_Score_Meter", "S.B._Other_Player_Score_Meter", "Unit_Sheild_Meter", "Motion_Sensor", "Territory_Meter" }, 32),
           }),
           new TagBlock("Numerical Elements", 84, 256, new MetaNode[] { 
               new StringId("Name"),
               new HaloPlugins.Objects.Data.Enum("Input 1", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 2", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 3", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 4", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new Flags("[Do Draw If] Unit Flags", new string[] { "Default", "Grenade_Type_Is_NONE", "Grenade_Type_Is_Frag", "Grenade_Type_Is_Plasma", "Unit_Is_Single_Wielding", "Unit_Is_Dual_Wielding", "Unit_Is_Unzoomed", "Unit_Is_Zoomed_(Level_1)", "Unit_Is_Zoomed_(Level_2)", "Grenades_Disabled", "Binoculars_Enabled", "Motion_Sensor_Enabled", "Sheild_Enabled", "Dervish" }, 16),
               new Flags("[Do Draw If] Extra Flags", new string[] { "AutoAim_-_Friendly", "AutoAim_-_Plasma", "AutoAim_-_Headshot", "AutoAim_-_Vulnerable", "AutoAim_-_Invincible" }, 8),
               new Flags("[Do Draw If] Weapon Flags", new string[] { "Primary_Weapon", "Secondary_Weapon", "Backpack_Weapon", "Age_Below_Cutoff", "Clip_Below_Cutoff", "Total_Below_Cutoff", "Overheated", "Out_Of_Ammo", "Lock_Target_Available", "Locking", "Locked" }, 16),
               new Flags("[Do Draw If] Game Engine State Flags", new string[] { "Campaign_Solo", "Campaign_Coop", "Free_For_All", "Team_Game", "User_Leading", "User_Not_Leading", "Timed_Game", "Untimed_Game", "Other_Score_Valid", "Other_Score_Invalid", "Player_Is_Arming_Bomb", "Player_Talking" }, 16),
               new Flags("[Don't Draw If] Unit Flags", new string[] { "Default", "Grenade_Type_Is_NONE", "Grenade_Type_Is_Frag", "Grenade_Type_Is_Plasma", "Unit_Is_Single_Wielding", "Unit_Is_Dual_Wielding", "Unit_Is_Unzoomed", "Unit_Is_Zoomed_(Level_1)", "Unit_Is_Zoomed_(Level_2)", "Grenades_Disabled", "Binoculars_Enabled", "Motion_Sensor_Enabled", "Sheild_Enabled", "Dervish" }, 16),
               new Flags("[Don't Draw If] Extra Flags", new string[] { "AutoAim_-_Friendly", "AutoAim_-_Plasma", "AutoAim_-_Headshot", "AutoAim_-_Vulnerable", "AutoAim_-_Invincible" }, 8),
               new Flags("[Don't Draw If] Weapon Flags", new string[] { "Primary_Weapon", "Secondary_Weapon", "Backpack_Weapon", "Age_Below_Cutoff", "Clip_Below_Cutoff", "Total_Below_Cutoff", "Overheated", "Out_Of_Ammo", "Lock_Target_Available", "Locking", "Locked" }, 16),
               new Flags("[Don't Draw If] Game Engine State Flags", new string[] { "Campaign_Solo", "Campaign_Coop", "Free_For_All", "Team_Game", "User_Leading", "User_Not_Leading", "Timed_Game", "Untimed_Game", "Other_Score_Valid", "Other_Score_Invalid", "Player_Is_Arming_Bomb", "Player_Talking" }, 16),
               new Value("Age Cutoff", typeof(short)),
               new Value("Clip Cutoff", typeof(short)),
               new Value("Total Cutoff", typeof(short)),
               new HaloPlugins.Objects.Data.Enum("Anchor", new string[] { "Health_And_Sheild", "Weapon_HUD", "Motion_Sensor", "Scoreboard", "Crosshair", "Lock-on_Target" }, 16),
               new Flags("Flags", new string[] { "String_Is_A_Number", "Force_2-Digit_Number", "Force_3-Digit_Number", "Talking_Player_Hack" }, 16),
               new TagReference("Shader", "shad"),
               new StringId("String"),
               new HaloPlugins.Objects.Data.Enum("Justification", new string[] { "Left", "Center", "Right" }, 16),
               new HaloPlugins.Objects.Data.Enum("Fullscreen Font Index", new string[] { "Default", "Number_Font" }, 16),
               new HaloPlugins.Objects.Data.Enum("Halfscreen Font Index", new string[] { "Default", "Number_Font" }, 16),
               new HaloPlugins.Objects.Data.Enum("Quarterscreen Font Index", new string[] { "Default", "Number_Font" }, 16),
               new Value("Fullscreen Scale", typeof(float)),
               new Value("Halfscreen Scale", typeof(float)),
               new Value("Quarterscreen Scale", typeof(float)),
               new Value("Fullscreen Offset X", typeof(short)),
               new Value("Fullscreen Offset Y", typeof(short)),
               new Value("Halfscreen Offset X", typeof(short)),
               new Value("Halfscreen Offset Y", typeof(short)),
               new Value("Quarterscreen Offset X", typeof(short)),
               new Value("Quarterscreen Offset Y", typeof(short)),
               new TagBlock("Effect", 104, 1, new MetaNode[] { 
                   new Flags("Flags", new string[] { "Apply_Scale", "Apply_Theta", "Apply_Offset" }, 32),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
                   new StringId("Input Name"),
                   new StringId("Range Name"),
                   new Value("Time Period In Seconds", typeof(float)),
                   new TagBlock("Function", 1, -1, new MetaNode[] { 
                       new Value("Data", typeof(byte)),
                   }),
               }),
           }),
           new Value("Low Clip Cutoff", typeof(short)),
           new Value("Low Ammo Cutoff", typeof(short)),
           new Value("Age Cutoff", typeof(float)),
           new TagBlock("Unknown98", 80, 4, new MetaNode[] { 
               new StringId("Name"),
               new HaloPlugins.Objects.Data.Enum("Input 1", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 2", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 3", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new HaloPlugins.Objects.Data.Enum("Input 4", new string[] { "BASIC_Zero", "BASIC_One", "BASIC_Time", "BASIC_Global_HUD_Fade", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "UNIT_Sheild", "UNIT_Body", "UNIT_AutoAimed", "UNIT_Has_No_Grenades", "UNIT_Frag_Grenade_Count", "UNIT_Plasma_Grenade_Count", "UNIT_Time_On_DPL_Sheild", "UNIT_Zoom_Fraction", "UNIT_Camo_Value", "...", "...", "...", "...", "...", "...", "...", "...", "PARENT_Sheild", "PARENT_Body", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "WEAPON_Clip_Ammo", "WEAPON_Heat", "WEAPON_Battery", "WEAPON_Total_Ammo", "WEAPON_Barrel_Spin", "WEAPON_Overheated", "WEAPON_Clip_Ammo_Fraction", "WEAPON_Time_On_Overheat", "WEAPON_Battery_Fraction", "WEAPON_Locking_Fraction", "...", "...", "...", "...", "...", "...", "...", "User_Score_Fraction", "Other_User_Score_Fraction", "User_Winning", "Bomb_Arming_Amount" }, 8),
               new Flags("[Do Draw If] Unit Flags", new string[] { "Default", "Grenade_Type_Is_NONE", "Grenade_Type_Is_Frag", "Grenade_Type_Is_Plasma", "Unit_Is_Single_Wielding", "Unit_Is_Dual_Wielding", "Unit_Is_Unzoomed", "Unit_Is_Zoomed_(Level_1)", "Unit_Is_Zoomed_(Level_2)", "Grenades_Disabled", "Binoculars_Enabled", "Motion_Sensor_Enabled", "Sheild_Enabled", "Dervish" }, 16),
               new Flags("[Do Draw If] Extra Flags", new string[] { "AutoAim_-_Friendly", "AutoAim_-_Plasma", "AutoAim_-_Headshot", "AutoAim_-_Vulnerable", "AutoAim_-_Invincible" }, 8),
               new Flags("[Do Draw If] Weapon Flags", new string[] { "Primary_Weapon", "Secondary_Weapon", "Backpack_Weapon", "Age_Below_Cutoff", "Clip_Below_Cutoff", "Total_Below_Cutoff", "Overheated", "Out_Of_Ammo", "Lock_Target_Available", "Locking", "Locked" }, 16),
               new Flags("[Do Draw If] Game Engine State Flags", new string[] { "Campaign_Solo", "Campaign_Coop", "Free_For_All", "Team_Game", "User_Leading", "User_Not_Leading", "Timed_Game", "Untimed_Game", "Other_Score_Valid", "Other_Score_Invalid", "Player_Is_Arming_Bomb", "Player_Talking" }, 16),
               new Flags("[Don't Draw If] Unit Flags", new string[] { "Default", "Grenade_Type_Is_NONE", "Grenade_Type_Is_Frag", "Grenade_Type_Is_Plasma", "Unit_Is_Single_Wielding", "Unit_Is_Dual_Wielding", "Unit_Is_Unzoomed", "Unit_Is_Zoomed_(Level_1)", "Unit_Is_Zoomed_(Level_2)", "Grenades_Disabled", "Binoculars_Enabled", "Motion_Sensor_Enabled", "Sheild_Enabled", "Dervish" }, 16),
               new Flags("[Don't Draw If] Extra Flags", new string[] { "AutoAim_-_Friendly", "AutoAim_-_Plasma", "AutoAim_-_Headshot", "AutoAim_-_Vulnerable", "AutoAim_-_Invincible" }, 8),
               new Flags("[Don't Draw If] Weapon Flags", new string[] { "Primary_Weapon", "Secondary_Weapon", "Backpack_Weapon", "Age_Below_Cutoff", "Clip_Below_Cutoff", "Total_Below_Cutoff", "Overheated", "Out_Of_Ammo", "Lock_Target_Available", "Locking", "Locked" }, 16),
               new Flags("[Don't Draw If] Game Engine State Flags", new string[] { "Campaign_Solo", "Campaign_Coop", "Free_For_All", "Team_Game", "User_Leading", "User_Not_Leading", "Timed_Game", "Untimed_Game", "Other_Score_Valid", "Other_Score_Invalid", "Player_Is_Arming_Bomb", "Player_Talking" }, 16),
               new Value("Age Cutoff", typeof(short)),
               new Value("Clip Cutoff", typeof(short)),
               new Value("Total Cutoff", typeof(short)),
               new HaloPlugins.Objects.Data.Enum("Anchor", new string[] { "Health_And_Sheild", "Weapon_HUD", "Motion_Sensor", "Scoreboard", "Crosshair", "Lock-on_Target" }, 16),
               new Flags("Flags", new string[] { "unused" }, 16),
               new TagReference("Bitmap", "bitm"),
               new TagReference("Fullscreen_Effect", "egor"),
               new TagReference("Halfscreen_Effect", "egor"),
               new TagReference("Quarterscreen_Effect", "egor"),
               new Value("Fullscreen", typeof(byte)),
               new Value("Halfscreen", typeof(byte)),
               new Value("Quarterscreen", typeof(byte)),
               new Padding(1),
               new Value("Fullscreen Offset X", typeof(short)),
               new Value("Fullscreen Offset Y", typeof(short)),
               new Value("Halfscreen Offset X", typeof(short)),
               new Value("Halfscreen Offset Y", typeof(short)),
               new Value("Quarterscreen Offset X", typeof(short)),
               new Value("Quarterscreen Offset Y", typeof(short)),
           }),
           });
       }
    }
}
